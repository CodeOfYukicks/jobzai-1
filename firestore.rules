rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isEmailVerified() {
      return request.auth.token.email_verified;
    }

    // User data
    match /users/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
      
      // Email templates subcollection
      match /emailTemplates/{templateId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
      
      // Campaigns subcollection
      match /campaigns/{campaignId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // Insights subcollection
      match /insights/{insightId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // User profile data subcollection
      match /profile/{document=**} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // AI Conversations subcollection
      match /aiConversations/{conversationId} {
        allow read, write: if isSignedIn() && isOwner(userId);
        
        match /messages/{messageId} {
          allow read, write: if isSignedIn() && isOwner(userId);
        }
      }

      // Job Applications subcollection
      match /jobApplications/{applicationId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
      
      // Analyses subcollection - NOUVEAU
      match /analyses/{analysisId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }

    // Settings collection (for API keys)
    match /settings/{settingId} {
      allow read: if isSignedIn();
      allow write: if false;
    }
  }
} 